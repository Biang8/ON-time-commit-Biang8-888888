name: wxread

on:
  schedule:
    - cron: '0 21 * * *'  # 北京5:00左右开始
    - cron: '40 3 * * *'  # 北京11:40左右开始
    - cron: '00 14 * * *' # 北京21:30 - 22:00左右开始
    - cron: '0 9 * * sat' # 周六随机阅读
    - cron: '0 9 * * sun' # 周日随机阅读
  workflow_dispatch:
    inputs:
      mode:
        description: '运行模式 (auto/manual)'
        required: false
        default: 'auto'

env:
  DNS_SERVER_1: 8.8.8.8
  DNS_SERVER_2: 8.8.4.4
  PYTHON_VERSION: '3.10'
  CERTIFI_VERSION: 2024.8.30
  CHARSET_NORMALIZER_VERSION: 3.4.0
  IDNA_VERSION: 3.10
  REQUESTS_VERSION: 2.32.3
  URLLIB3_VERSION: 2.2.3
  BASE_MINUTES: $((3 * 60 + 30))
  FLOAT_MINUTES: 30
  WEEKEND_MIN: 90
  WEEKEND_MAX: 190

jobs:
  deploy:
    runs-on: ubuntu-22.04
    environment: AutoRead

    steps:
    - name: 🔧 设置DNS
      run: |
        echo "nameserver $DNS_SERVER_1" | sudo tee /etc/resolv.conf
        echo "nameserver $DNS_SERVER_2" | sudo tee -a /etc/resolv.conf
        echo "✅ DNS配置完成"

    - name: 📥 检出仓库
      uses: actions/checkout@v4

    - name: 缓存依赖
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: 🐍 设置Python $PYTHON_VERSION
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install certifi==$CERTIFI_VERSION charset-normalizer==$CHARSET_NORMALIZER_VERSION idna==$IDNA_VERSION requests==$REQUESTS_VERSION urllib3==$URLLIB3_VERSION
        echo "✅ 依赖安装完成，已安装的依赖版本如下："
        pip list

    - name: ⏱️ 随机延迟
      if: github.event_name == 'schedule'
      run: |
        DELAY=$((RANDOM % 31))  # 0 - 30 分钟随机延迟
        echo "生成的随机延迟：${DELAY}分钟"
        sleep $((DELAY * 60))
        echo "延迟执行完成"

    - name: 🔢 生成READ_NUM
      run: |
        # 调试信息
        echo "=== 触发事件分析 ==="
        echo "事件类型: ${{ github.event_name }}"
        echo "输入模式: ${{ github.event.inputs.mode }}"
        echo "定时规则: ${{ github.event.schedule }}"

        if [[ "${{ github.event.inputs.mode }}" == "manual" ]]; then
          # 手动模式无延迟
          DELAY=0
        fi

        if [[ "${{ github.event_name }}" == "schedule" && ( "${{ github.event.schedule }}" == "0 9 * * sat" || "${{ github.event.schedule }}" == "0 9 * * sun" ) ]]; then
          # 周六或周日随机阅读45 - 95分钟
          NUM=$((RANDOM % ($WEEKEND_MAX - $WEEKEND_MIN + 1) + $WEEKEND_MIN))
          echo "🎉 周末随机任务 | 范围: $((WEEKEND_MIN / 2)) - $((WEEKEND_MAX / 2)) 分钟"
        else
          # 工作日每天大约3.3小时，有30分钟浮动
          NUM=$((RANDOM % (2 * $FLOAT_MINUTES + 1) + $BASE_MINUTES - $FLOAT_MINUTES))
          NUM=$((NUM * 2))  # 转换为程序所需的单位
          echo "📅 工作日任务 | 范围: $((BASE_MINUTES - FLOAT_MINUTES)) - $((BASE_MINUTES + FLOAT_MINUTES)) 分钟"
        fi

        # 输出结果
        echo "✅ 最终READ_NUM: $NUM (等效 $((NUM / 2)) 分钟)"
        echo "READ_NUM=$NUM" >> $GITHUB_ENV

    - name: 🚀 执行主程序
      env:
        WXREAD_CURL_BASH: ${{ secrets.WXREAD_CURL_BASH }}
      run: |
        set -e
        echo "=== 执行参数 ==="
        echo "READ_NUM: ${{ env.READ_NUM }}"
        python main.py || { echo "执行主程序时发生错误"; exit 1; }    
